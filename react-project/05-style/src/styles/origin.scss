@import "./midea.scss";

$color-main: red;

// style 코드 블록을 @mixin으로 하나로 묶어 두고, (함수처럼)
@mixin box-size($size) {
  width: $size;
  height: $size;
}

// include 키워드를 이용해서 사용한다.
.box1 {
  @include box-size(100px);
  background-color: blue;
}

.box2 {
  @include box-size(200px);
  background-color: green;
}

.scss-parents {
  color: $color-main;
  // width: 100% - 20%;
  // background-color: beige;
}

// 중첩(자식 요소)
.scss-parents {
  ul {
    background-color: black;
    color: white;
  }

  // &는 해당 요소 자체를 의미
  &:hover {
    cursor: pointer;
  }
}

.btn {
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
}

// 확장: 앞서 사용했던 css를 여기서도 사용하고 싶다!
.btn-primary {
  @extend .btn;
  background-color: cadetblue;
  color: antiquewhite;
  &:hover {
    cursor: pointer;
  }
}

// 네모
.origin-sass {
  display: flex;

  .box {
    @include box-size(100px);
    &.red {
      background-color: red;
    }
    &.orange {
      background-color: orange;
    }
    &.yellow {
      background-color: yellow;
    }
    &.green {
      background-color: green;
    }
    &.blue {
      background-color: blue;
    }
    &.purple {
      background-color: purple;
    }
  }
}

// 태블릿일 때는 768px
// @mixin tablet {
//   @media screen and (max-width: 768px) {
//     @content;
//   }
// }
// @mixin : css에서 묶어두고 싶은 코드블럭을 정의할 때 사용한다.
// @include : 정의한 mixin을 사용할 때
// @content : 정의할 때 @content 키워드를 적은 곳 - 사용할 때 중괄호 안에 적은 내용 전부가 content에 들어감.

@include tablet {
  .origin-sass {
    display: block;
  }
}

// 핸드폰일 때는 500px
