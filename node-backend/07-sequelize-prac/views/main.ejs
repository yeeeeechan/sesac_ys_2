<!DOCTYPE html>
<html lang="ko">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <title>Main</title>
  </head>

  <body>
    <form name="joinForm">
      <fieldset>
        <legend> 회원가입 </legend>
        <input type="text" name="userid" placeholder="아이디" required /> <br />
        <input type="text" name="name" placeholder="이름" required /> <br />
        <input type="password" name="password" placeholder="비밀번호" required />
        <button type="button" onclick="join()">가입</button>
      </fieldset>
    </form>
    <h3 id="resultMsg1"></h3>

    <form name="loginForm">
      <fieldset>
        <legend> 로그인 </legend>
        <input type="hidden" name="id_hidden" value="" disabled>
        <input type="text" name="id" placeholder="로그인 아이디" autocomplete="off" /> <br />
        <input type="password" name="pw" placeholder="비밀번호" autocomplete="off" />
        <button type="button" onclick="login()"> 로그인 </button>
      </fieldset>
    </form>
    <h3 id="resultMsg2"></h3>

    <script>
      function search() {
        const form = document.forms["searchForm"]
        const data = {
          id: form.userid.value,
          name: form.name.value,
          pw: form.password.value
        }

        axios({
          method: "get",
          url: "/search",
          params: data
        }).then((res) => {
          if (res.data.length != 0) {
            console.log("res.data", res.data)

            const {
              userid,
              name,
              pw
            } = res.data[0]
            // findAll 사용하면 여러 명이 조회되어 result에 담기므로, 배열 형태가 된다.
            // 따라서 구조분해 할당 할 때도 0번 인덱스에 접근해야 함

            console.log("userid", userid)

            form.userid.value = userid
            form.name.value = name
            form.password.value = pw

            $(".btn-group").html(`
            <button type="button" onclick="editUser()"> 변경 </button>
            <button type="button" onclick="resetValue()"> 취소 </button>
            <button type="button" onclick="deleteData(userid)"> 탈퇴 </button>
          `)

          } else {
            $("#resultMsg3").html('해당하는 회원이 없습니다.').css('color', 'red')
            $(".btn-group").html(`<button type="button" onclick="resetValue()"> 취소 </button>`)
          }
        })
      }

      function login() {
        const form = document.forms["loginForm"]

        const data = {
          id: form.id.value,
          pw: form.pw.value
        }

        axios({
          method: "post",
          url: "/login",
          data: data
        }).then((res) => {
          console.log("res.data.result: ", res)
          form.id_hidden.value = res.data[0].id
          console.log("form.id_hidden.value", form.id_hidden.value)

          if (res.data.length != 0) {
            $("#resultMsg2").html(`로그인 성공!`).css('color', 'blue')
          } else {
            $("#resultMsg2").html(`로그인 실패!`).css('color', 'red')
          }
        })
      }

      function join() {
        const form = document.forms["joinForm"]
        const data = {
          id: form.userid.value,
          name: form.name.value,
          pw: form.password.value,
        }

        axios({
          method: "post",
          url: "/join",
          data: data,
        }).then((res) => {
          console.log("가입 정보", res.data)
          $("#resultMsg1").html(`회원가입 성공! ${res.data.userid} 님, 환영합니다.`)
        })
      }
    </script>
  </body>

</html>